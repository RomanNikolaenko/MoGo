@charset "UTF-8";@import url("https://fonts.googleapis.com/css?family=Kaushan+Script|Montserrat:400,400i,500,500i,600,600i,700,700i,900,900i|Raleway:400,400i,500,500i,600,600i,700,700i,900,900i&display=swap&subset=cyrillic,cyrillic-ext,latin-ext");.slick-slider{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list,.slick-slider{position:relative;display:block}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:none}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translateZ(0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-loading .slick-list{background:#fff url(../img/slider/ajax-loader.gif) 50% no-repeat}@font-face{font-family:slick;src:url(../img/slider/slick.eot);src:url(../img/slider/slick.eot?#iefix) format("embedded-opentype"),url(../img/slider/slick.woff) format("woff"),url(../img/slider/slick.ttf) format("truetype"),url(../img/slider/slick.svg#slick) format("svg");font-weight:400;font-style:normal}.slick-next,.slick-prev{position:absolute;display:block;height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;top:50%;transform:translateY(-50%);padding:0;border:none}.slick-next,.slick-next:focus,.slick-next:hover,.slick-prev,.slick-prev:focus,.slick-prev:hover{background:transparent;color:transparent;outline:none}.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{content:url(../img/arrow-hover.png)}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next:before,.slick-prev:before{font-family:slick;font-size:20px;line-height:1;color:#fff;opacity:.75;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-prev{left:30px;z-index:1}.slick-prev:before{content:"";background:url(../img/home/arrow.svg);width:20px;position:absolute;height:20px;right:0;top:0;background-size:100% 100%;transform:rotate(180deg)}.slick-prev:hover{opacity:.6}.slick-next{right:30px;z-index:1}.slick-next:before{content:"";background:url(../img/home/arrow.svg);width:20px;position:absolute;height:20px;right:0;top:0;background-size:100% 100%}.slick-next:hover{opacity:.6}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{position:absolute;bottom:-25px;list-style:none;display:block;text-align:center;padding:0;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;margin:0 5px;padding:0}.slick-dots li,.slick-dots li button{height:20px;width:20px;cursor:pointer}.slick-dots li button{border:0;background:transparent;display:block;outline:none;line-height:0;font-size:0;color:transparent;padding:5px}.slick-dots li button:focus,.slick-dots li button:hover{outline:none}.slick-dots li button:focus:before,.slick-dots li button:hover:before{opacity:1}.slick-dots li button:before{position:absolute;top:0;left:0;content:"â€¢";width:20px;height:20px;font-family:slick;font-size:6px;line-height:20px;text-align:center;color:#000;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.mfp-bg{z-index:2999;overflow:hidden;background:#0b0b0b;opacity:.8}.mfp-bg,.mfp-wrap{top:0;left:0;width:100%;height:100%;position:fixed}.mfp-wrap{z-index:3000;outline:none!important;-webkit-backface-visibility:hidden}.mfp-container{text-align:center;position:absolute;width:100%;height:100%;left:0;top:0;padding:0 8px;box-sizing:border-box}.mfp-container:before{content:"";display:inline-block;height:100%;vertical-align:middle}.mfp-align-top .mfp-container:before{display:none}.mfp-content{position:relative;display:inline-block;vertical-align:middle;margin:0 auto;text-align:left;z-index:1045}.mfp-ajax-holder .mfp-content,.mfp-inline-holder .mfp-content{width:100%;cursor:auto}.mfp-ajax-cur{cursor:progress}.mfp-zoom-out-cur,.mfp-zoom-out-cur .mfp-image-holder .mfp-close{cursor:zoom-out}.mfp-zoom{cursor:pointer;cursor:zoom-in}.mfp-auto-cursor .mfp-content{cursor:auto;background:#fff;padding:20px 0;width:27.2%}.mfp-arrow,.mfp-close,.mfp-counter,.mfp-preloader{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.mfp-loading.mfp-figure{display:none}.mfp-hide{display:none!important}.mfp-preloader{color:#ccc;position:absolute;top:50%;width:auto;text-align:center;margin-top:-.8em;left:8px;right:8px;z-index:1044}.mfp-preloader a{color:#ccc}.mfp-preloader a:hover{color:#fff}.mfp-s-error .mfp-content,.mfp-s-ready .mfp-preloader{display:none}button.mfp-arrow,button.mfp-close{overflow:visible;cursor:pointer;background:transparent;border:0;-webkit-appearance:none;display:block;outline:none;padding:0;z-index:1046;box-shadow:none;-ms-touch-action:manipulation;touch-action:manipulation}button::-moz-focus-inner{padding:0;border:0}.mfp-close{width:44px;height:44px;line-height:44px;position:absolute;right:0;top:0;text-decoration:none;text-align:center;opacity:.65;padding:0 0 18px 10px;color:#000;font-style:normal;font-size:28px;font-family:Arial,Baskerville,monospace}.mfp-close:focus,.mfp-close:hover{opacity:1}.mfp-close:active{top:1px}.mfp-close-btn-in .mfp-close{color:#000}.mfp-iframe-holder .mfp-close,.mfp-image-holder .mfp-close{color:#000;right:-6px;text-align:right;padding-right:6px;width:100%}.mfp-counter{position:absolute;top:0;right:0;color:#ccc;font-size:12px;line-height:18px;white-space:nowrap}.mfp-arrow{position:absolute;opacity:.65;margin:0;top:50%;margin-top:-55px;padding:0;width:90px;height:110px;-webkit-tap-highlight-color:transparent}.mfp-arrow:active{margin-top:-54px}.mfp-arrow:focus,.mfp-arrow:hover{opacity:1}.mfp-arrow:after,.mfp-arrow:before{content:"";display:block;width:0;height:0;position:absolute;left:0;top:0;margin-top:35px;margin-left:35px;border:medium inset transparent}.mfp-arrow:after{border-top-width:13px;border-bottom-width:13px;top:8px}.mfp-arrow:before{border-top-width:21px;border-bottom-width:21px;opacity:.7}.mfp-arrow-left{left:0}.mfp-arrow-left:after{border-right:17px solid #fff;margin-left:31px}.mfp-arrow-left:before{margin-left:25px;border-right:27px solid #3f3f3f}.mfp-arrow-right{right:0}.mfp-arrow-right:after{border-left:17px solid #fff;margin-left:39px}.mfp-arrow-right:before{border-left:27px solid #3f3f3f}.mfp-iframe-holder{padding-top:40px;padding-bottom:40px}.mfp-iframe-holder .mfp-content{line-height:0;width:100%;max-width:900px}.mfp-iframe-holder .mfp-close{top:-40px}.mfp-iframe-scaler{width:100%;height:0;overflow:hidden;padding-top:56.25%}.mfp-iframe-scaler iframe{position:absolute;display:block;top:0;left:0;width:100%;height:100%;box-shadow:0 0 8px rgba(0,0,0,.6);background:#000}img.mfp-img{width:auto;max-width:100%;height:auto;display:block;box-sizing:border-box;padding:40px 0;margin:0 auto}.mfp-figure,img.mfp-img{line-height:0}.mfp-figure:after{content:"";position:absolute;left:0;top:40px;bottom:40px;display:block;right:0;width:auto;height:auto;z-index:-1;box-shadow:0 0 8px rgba(0,0,0,.6);background:#444}.mfp-figure small{color:#bdbdbd;display:block;font-size:12px;line-height:14px}.mfp-figure figure{margin:0}.mfp-bottom-bar{margin-top:-36px;position:absolute;top:100%;left:0;width:100%;cursor:auto}.mfp-title{text-align:left;line-height:18px;color:#f3f3f3;word-wrap:break-word;padding-right:36px}.mfp-image-holder .mfp-content{max-width:100%}.mfp-gallery .mfp-image-holder .mfp-figure{cursor:pointer}@media screen and (max-height:300px),screen and (max-width:800px) and (orientation:landscape){.mfp-img-mobile .mfp-image-holder{padding-left:0;padding-right:0}.mfp-img-mobile img.mfp-img{padding:0}.mfp-img-mobile .mfp-figure:after{top:0;bottom:0}.mfp-img-mobile .mfp-figure small{display:inline;margin-left:5px}.mfp-img-mobile .mfp-bottom-bar{background:rgba(0,0,0,.6);bottom:0;margin:0;top:auto;padding:3px 5px;position:fixed;box-sizing:border-box}.mfp-img-mobile .mfp-bottom-bar:empty{padding:0}.mfp-img-mobile .mfp-counter{right:5px;top:3px}.mfp-img-mobile .mfp-close{top:0;right:0;width:35px;height:35px;line-height:35px;background:rgba(0,0,0,.6);position:fixed;text-align:center;padding:0}}@media (max-width:900px){.mfp-arrow{transform:scale(.75)}.mfp-arrow-left{transform-origin:0}.mfp-arrow-right{transform-origin:100%}.mfp-container{padding-left:6px;padding-right:6px}.mfp-auto-cursor .mfp-content{width:100%}}.white-popup h5{padding-left:20px;border-bottom:1px solid #ccc;padding-bottom:20px}.white-popup .mfp-close{margin:8px 8px 0 0}.white-popup form .btn{font-size:21px!important;padding:10px 0!important}.blockImagePopup .mfp-content{padding:0;width:100%;background:transparent}.blockImagePopup .mfp-content .mfp-close{color:#fff}body{font-size:14px;padding:0;margin:0}a,body,input{font-family:RobotoCondensedRegular}a,input{transition:all .3s ease}.container{max-width:1200px;padding:0 15px;margin:0 auto}h1{font-family:Raleway,sans-serif}h2{font-family:Montserrat,sans-serif}h3{font-family:Kaushan Script,cursive}h4{font-family:Montserrat,sans-serif}hr{width:60px;height:3px;border:none}p{line-height:25px}@font-face{font-family:RobotoCondensedRegular;src:url(../fonts/RobotoCondensed/RobotoCondensed-Regular.ttf) format("truetype");font-style:normal;font-weight:400}body,header{max-width:1920px;margin:0 auto}header{position:fixed;top:0;left:0;right:0;z-index:9;background:hsla(222,8%,51%,.6);height:70px}@media screen and (max-width:991.698px){header .container{padding:0}}.header_grid{display:grid;grid-template-columns:150px 1fr;grid-template-rows:70px}@media screen and (max-width:991.98px){.header_grid{grid-template-columns:1fr}}.header_logo{margin:auto}@media screen and (max-width:991.98px){.header_logo{display:none}}.header_logo a{color:#fff;text-decoration:none;font-size:44px;font-weight:700;font-family:Montserrat,sans-serif}.header_logo:hover a{text-shadow:0 5px 5px hsla(47,95%,76%,.4)}.header_menu{display:grid;position:relative;-ms-flex-line-pack:center;align-content:center;grid-template-columns:1fr 178px;grid-gap:20px}@media screen and (max-width:991.98px){.header_menu{padding:0 15px 0 0}}@media screen and (min-width:992px){.header_menu_btn .hamburger{display:none}}.header_menu_btn_nav{display:-ms-flexbox;display:flex;padding:0;list-style:none;-ms-flex-pack:distribute;justify-content:space-around}@media screen and (min-width:576px){.header_menu_btn_nav li{text-align:center}}@media screen and (max-width:991.98px){.header_menu_btn_nav{position:absolute;left:0;top:70px;width:100%;height:100%;margin:0;background:hsla(222,8%,51%,.6);-ms-flex-line-pack:center;align-content:center;transform:translate(-150vw);transition:width 475ms ease-out,transform .45s ease}}@media screen and (max-width:575.98px){.header_menu_btn_nav{-ms-flex-direction:column;flex-direction:column;padding-left:25px;height:240px}}.header_menu_btn_nav_item{line-height:42px}@media screen and (max-width:991.98px){.header_menu_btn_nav_item{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.header_menu_btn_nav_item a{padding:0}}.header_menu_btn_nav_item a{text-decoration:none;color:#fff;padding-bottom:8px;text-transform:uppercase}.header_menu_btn_nav_item a:hover{color:#fce38a;border-bottom:3px solid}.header_menu .form{display:grid;grid-template-columns:135px 22px;grid-gap:0 20px;-ms-flex-line-pack:center;align-content:center;-ms-flex-pack:end;justify-content:end}.header_menu .form input{height:22px}.header_menu .form input[type=search]{padding-left:5px;border:0}input.hamburger{display:none}input.hamburger:checked~.header_menu_btn_nav{transform:translatex(0)}input.hamburger:checked~label>i{background-color:transparent;transform:rotate(90deg)}input.hamburger:checked~label>i:before{transform:translate(-50%,-50%) rotate(315deg)}input.hamburger:checked~label>i:after{transform:translate(-50%,-50%) rotate(-315deg)}label.hamburger{z-index:1;position:relative;left:15px;display:block;height:50px;width:50px}label.hamburger>i{position:absolute;width:100%;height:2px;top:50%;background-color:#fff;pointer-events:auto;transition-duration:.35s;transition-delay:.35s}label.hamburger>i:after,label.hamburger>i:before{position:absolute;display:block;width:100%;height:2px;left:50%;background-color:#fff;content:"";transition:transform .35s;transform-origin:50% 50%}label.hamburger>i:before{transform:translate(-50%,-14px)}label.hamburger>i:after{transform:translate(-50%,14px)}footer{margin-top:70px}footer .subscribe{display:grid;grid-template-columns:1.5fr 1.5fr 1fr;grid-gap:30px}@media screen and (max-width:767.98px){footer .subscribe{grid-template-columns:repeat(auto-fill,100%);-ms-flex-pack:center;justify-content:center}}@media screen and (min-width:768px) and (max-width:991.98px){footer .subscribe{grid-template-columns:repeat(auto-fill,46%);-ms-flex-pack:justify;justify-content:space-between}}footer .subscribe_item_title{height:54px}footer .subscribe_item_title a{color:#888;text-decoration:none;font-size:44px;font-weight:700;font-family:Montserrat,sans-serif}footer .subscribe_item_title a:hover{text-shadow:0 5px 5px hsla(47,95%,76%,.4)}footer .subscribe_item_title p{text-transform:uppercase;font-weight:700}footer .subscribe_item_social{display:grid;grid-template-columns:60px repeat(8,1fr);grid-template-rows:50px}@media screen and (max-width:575.98px){footer .subscribe_item_social{grid-template-columns:repeat(auto-fill,minmax(50px,70px));-ms-flex-pack:justify;justify-content:space-between;grid-template-rows:50px 50px 50px}}footer .subscribe_item_social p{margin:0;line-height:50px;height:20px}footer .subscribe_item_social a{margin:auto}footer .subscribe_item_social a svg{width:20px;height:20px}footer .subscribe_item_social a:hover>svg .a{fill:#fce38a;transition:all .3s ease}footer .subscribe_item_social img{width:16px;height:16px}footer .subscribe_item_form{display:grid;grid-template-columns:230px 150px;grid-template-rows:40px;padding-top:15px}@media screen and (max-width:480px){footer .subscribe_item_form{grid-template-columns:1fr;grid-template-rows:40px 40px;grid-gap:15px}}footer .subscribe_item_form input[type=text]{font-size:15px;padding-left:10px}footer .subscribe_item_form input[type=submit]{font-weight:700;color:#fff;font-size:14px;background-color:#95e1d3;border:none;text-transform:uppercase;cursor:pointer}footer .subscribe_item_form input[type=submit]:hover{color:#fce38a}footer .subscribe_item_blogs_item{display:grid;grid-template-columns:120px 1fr;grid-gap:20px;margin-bottom:20px}footer .subscribe_item_blogs_item_title h2{font-size:12px;text-transform:uppercase}@media screen and (min-width:768px) and (max-width:1024px){footer .subscribe_item_blogs_item_title h2{margin-top:0;font-size:11px}}footer .subscribe_item_blogs_item_title p{font-style:italic;font-size:13px;margin:0}footer .subscribe_item_photo{display:grid;grid-template-columns:repeat(3,1fr);grid-gap:10px}footer .subscribe_item_photo img{width:100%}footer .subscribe_item:first-of-type h2{font-size:14px;padding-bottom:15px;border-bottom:2px solid #ccc}footer .subscribe_item:first-of-type h2 b{font-weight:400}footer .subscribe_item:nth-of-type(3) a{text-decoration:none;color:red;line-height:45px}footer .subscribe_item:nth-of-type(3) a:hover{color:#fce38a}footer .copyright{text-align:center;border-top:2px solid #ccc;max-width:1920px;margin:0 auto}footer .copyright a{text-decoration:none;color:red}footer .copyright a:hover{color:#fce38a}.intro{background:url(../img/home/background.jpg) no-repeat;background-position:50%;background-size:100% 100%;margin:0 auto;padding:150px 0;max-width:1920px;height:auto}@media screen and (max-width:575.98px){.intro{background-size:cover;padding:150px 0 50px}}.intro_title h1{color:#fff;text-align:center;font-size:143px;text-transform:uppercase;font-weight:800;width:100%;margin:0 auto}.intro_title h1 span{display:block}@media screen and (max-width:575.98px){.intro_title h1{font-size:50px}}@media screen and (min-width:576px) and (max-width:767.98px){.intro_title h1{font-size:100px}}.intro_title h3{color:#fff;text-align:center;font-size:72px;margin-top:0}@media screen and (max-width:575.98px){.intro_title h3{font-size:35px}}@media screen and (min-width:576px) and (max-width:767.98px){.intro_title h3{font-size:55px}}.intro_title hr{background-color:#fff;margin:50px auto 0}.intro_title a{border:2px solid #fff;text-decoration:none;display:block;width:150px;text-transform:uppercase;text-align:center;height:35px;line-height:35px;color:#fff;margin:0 auto;margin-top:100px}.intro_title a:hover{color:#fce38a;border-color:#fce38a}.about{text-align:center;padding-top:70px;padding-bottom:50px}.about h2{font-size:29px;text-transform:uppercase}.about h3{font-size:25px;font-weight:400;margin-bottom:0}.about hr{background-color:red}.about p{line-height:25px;max-width:800px;margin:24px auto}.about .team{display:grid;grid-template-columns:repeat(auto-fill,32%);-ms-flex-pack:justify;justify-content:space-between;grid-gap:15px;padding-top:50px}@media screen and (max-width:575.98px){.about .team{grid-template-columns:repeat(auto-fill,100%)}}@media screen and (min-width:576px) and (max-width:780.98px){.about .team{grid-template-columns:repeat(auto-fill,46%);grid-gap:30px 15px}}.about .team_item{background-color:#95e1d3;display:grid;position:relative;transition:all .5s ease}.about .team_item:before,.about .team_item img{transition:all .5s ease;width:100%}.about .team_item:before{content:"";position:absolute;top:0;left:0;height:100%;background:linear-gradient(180deg,#ea8a89,#f2e391);opacity:0}.about .team_item:after{content:"SUPER TEAM";position:absolute;color:#fff;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:end;align-items:flex-end;font-size:20px;font-weight:800;top:calc(50% - 25px);left:0;background-image:url(../img/home/team.png);background-position-x:center;background-repeat:no-repeat;width:100%;height:50px;opacity:0;transition:all .5s ease}.about .team_item:hover:after,.about .team_item:hover:before{opacity:.8;margin:-15px 0 0 -15px}.about .team_item:hover img{margin:-15px 0 0 -15px}.stats{background-color:#95e1d3;margin:0 auto;max-width:1920px}.stats_list{display:grid;grid-template-columns:repeat(5,1fr);grid-template-rows:200px}@media screen and (max-width:575.98px){.stats_list{grid-template-rows:150px}}.stats_list_item{text-align:center;display:grid;-ms-flex-line-pack:center;align-content:center}.stats_list_item_count{font-size:72px;font-weight:600;color:#fff;margin:0}@media screen and (max-width:575.98px){.stats_list_item_count{font-size:30px}}@media screen and (min-width:575.98px) and (max-width:767.98px){.stats_list_item_count{font-size:45px}}.stats_list_item_title{color:#fff;text-transform:uppercase}@media screen and (max-width:575.98px){.stats_list_item_title{font-size:9px;text-transform:capitalize}}@media screen and (min-width:575.98px) and (max-width:767.98px){.stats_list_item_title{font-size:11px}}.stats_list_item+.stats_list_item,.stats_list_item:first-of-type{border-left:2px solid #fff}.stats_list_item:last-of-type{border-right:2px solid #fff}.services{padding-bottom:50px;padding-top:70px}.services h2{font-size:29px;text-transform:uppercase;text-align:center}.services h3{font-size:25px;font-weight:400;margin-bottom:0;text-align:center}.services hr{background-color:red}.services_work{display:grid;grid-template-columns:repeat(3,1fr);padding-top:25px}@media screen and (min-width:320px) and (max-width:991.98px){.services_work{grid-template-columns:repeat(auto-fit,minmax(290px,1fr))}}.services_work_item{display:grid;grid-template-columns:50px 1fr;padding:25px 10px}.services_work_item:first-of-type,.services_work_item:nth-of-type(2),.services_work_item:nth-of-type(3){border-bottom:1px solid #ccc}@media screen and (max-width:609.98px){.services_work_item:nth-of-type(5){border-bottom:1px solid #ccc}}@media screen and (max-width:899.98px){.services_work_item:nth-of-type(4){border-bottom:1px solid #ccc}}.services_work_item_img{-o-object-fit:contain;object-fit:contain}.services_work_item_title h2{font-size:14px;text-align:left;margin-top:0;text-transform:uppercase}.services_work_item_title p{margin-bottom:0}.service{padding-top:70px;padding-bottom:100px}.service .container>h2{font-size:29px;text-transform:uppercase;text-align:center}.service .container>h3{font-size:25px;font-weight:400;margin-bottom:0;text-align:center}.service .container>hr{background-color:red}.service .container>p{line-height:25px;max-width:800px;margin:24px auto}.service_main{display:grid;grid-template-columns:repeat(auto-fill,47%);grid-gap:40px;-ms-flex-pack:justify;justify-content:space-between;padding-top:30px}@media screen and (max-width:767.98px){.service_main{grid-template-columns:repeat(auto-fill,90%);-ms-flex-pack:center;justify-content:center}}.service_main_img img{width:100%}.service_main_accordion{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.service_main_accordion_newstitle{font-family:RobotoCondensedRegular;font-size:15px;text-transform:uppercase;font-weight:400;margin:0;padding:15px;border-bottom:1px solid #e5e5e5;border-left:1px solid #e5e5e5;border-right:1px solid #e5e5e5;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;cursor:pointer;position:relative}.service_main_accordion_newstitle img{padding-right:15px}.service_main_accordion_newstitle:first-of-type{border-top:1px solid #e5e5e5}.service_main_accordion_newscontent{border-bottom:1px solid #e5e5e5;border-left:1px solid #e5e5e5;border-right:1px solid #e5e5e5;padding:0 25px 0 15px;max-height:115px;overflow:overlay}.ui-accordion-header-icon{background-image:url(../img/home/plus-minus.svg);background-size:cover;height:12px;width:12px;position:absolute;right:15px}.ui-accordion-header-icon.ui-icon-triangle-1-s{background-position:0 -36px}.design{background:url(../img/home/design-back.jpg) 50% no-repeat;width:100%;height:auto;text-align:center;padding-top:70px;margin-bottom:100px}.design h2{font-size:29px;text-transform:uppercase;color:#fff}.design h3{font-size:25px;font-weight:400;margin-bottom:0;color:#fff}.design hr{background-color:red}.design_image{position:relative;margin:0 auto;max-width:735px}.design_image img{width:100%}.design_image img:first-of-type{padding-top:50px;display:block;margin:0 auto;max-width:477px}.design_image img:nth-of-type(2){position:absolute;bottom:-70px;right:0;max-width:211px}@media screen and (max-width:499.98px){.design_image img:nth-of-type(2){bottom:-11%;max-width:45%}}.team{text-align:center;padding-bottom:100px}.team h2{font-size:29px;text-transform:uppercase}.team h3{font-size:25px;font-weight:400;margin-bottom:0}.team hr{background-color:red}.team p{line-height:25px;max-width:800px;margin:24px auto}.team_people{display:grid;grid-template-columns:repeat(auto-fill,31%);grid-gap:25px;padding-top:30px;-ms-flex-pack:distribute;justify-content:space-around}@media (max-width:767.98px){.team_people{grid-template-columns:repeat(auto-fill,100%);-ms-flex-pack:center;justify-content:center}}.team_people_item_men{position:relative;display:grid;background-color:#95e1d3;margin-bottom:20px}.team_people_item_men:hover img{margin:-15px 0 0 -15px;padding-bottom:15px}.team_people_item_men:hover .team_people_item_men_overlay{opacity:.8;margin:-15px 0 0 -15px;transition:all .5s ease}.team_people_item_men img{width:100%;transition:all .5s ease}.team_people_item_men_overlay{position:absolute;top:0;left:0;width:100%;height:100%;background:linear-gradient(180deg,#ea8a89,#f2e391);display:grid;grid-template-columns:repeat(4,50px);-ms-flex-line-pack:center;align-content:center;-ms-flex-pack:center;justify-content:center;opacity:0}.team_people_item_men_overlay a{display:block;width:30px;height:22px;padding:9px;background:#f2e391;position:relative}.team_people_item_men_overlay a:before{content:"";top:calc(50% - 11px);left:calc(50% - 15px);width:30px;height:22px;position:absolute}.team_people_item_men_overlay a:first-of-type::before{background:url(../img/home/facebook.svg) no-repeat;background-size:100% 100%}.team_people_item_men_overlay a:first-of-type:hover::before{background:url(../img/home/facebook-hover.svg) no-repeat;background-size:100% 100%}.team_people_item_men_overlay a:nth-of-type(2):before{background:url(../img/home/twitter.svg) no-repeat;background-size:100% 100%}.team_people_item_men_overlay a:nth-of-type(2):hover:before{background:url(../img/home/twitter-hover.svg) no-repeat;background-size:100% 100%}.team_people_item_men_overlay a:nth-of-type(3):before{background:url(../img/home/pinterest.svg) no-repeat;background-size:100% 100%}.team_people_item_men_overlay a:nth-of-type(3):hover:before{background:url(../img/home/pinterest-hover.svg) no-repeat;background-size:100% 100%}.team_people_item_men_overlay a:nth-of-type(4):before{background:url(../img/home/instagram.svg) no-repeat;background-size:100% 100%}.team_people_item_men_overlay a:nth-of-type(4):hover:before{background:url(../img/home/instagram-hover.svg) no-repeat;background-size:100% 100%}.team_people_item h2{font-size:14px;margin-bottom:0}.team_people_item h3{font-size:15px;font-family:Roboto,sans-serif;font-style:normal}.carousel_item{display:grid!important;grid-template-rows:150px;grid-gap:30px;padding:70px 120px}@media screen and (max-width:767.98px){.carousel_item{padding:70px 20px}}.carousel_item_left{display:grid;-ms-flex-line-pack:center;align-content:center;-ms-flex-pack:center;justify-content:center}.carousel_item_right p{font-style:italic;font-size:24px;line-height:37px;margin:0}.carousel_item_right_name{display:grid;grid-template-columns:110px 1fr}.carousel_item_right_name hr{background:red;margin:auto}.carousel_item_right_name h3{font-size:25px;font-weight:400;margin:0}.first{padding-bottom:100px}.first .carousel_item{grid-template-columns:150px 1fr;background-color:#e5e5e5}@media screen and (max-width:767.98px){.first .carousel_item{grid-template-columns:1fr}}.first .carousel_item_left{border:3px solid #95e1d3}.second{padding:100px 0}.second .carousel_item{grid-template-columns:220px 1fr}@media screen and (max-width:767.98px){.second .carousel_item{grid-template-columns:1fr}}.second .carousel_item_left img{border-radius:50%;width:210px;height:210px}.hipster{padding:0 0 110px}.hipster_logo{display:grid;grid-template-columns:repeat(auto-fill,minmax(130px,15%));-ms-flex-pack:justify;justify-content:space-between;text-align:center}@media screen and (max-width:575.98px){.hipster_logo{grid-template-columns:repeat(auto-fill,46%);grid-gap:20px 0}}@media screen and (min-width:576px) and (max-width:991.98px){.hipster_logo{grid-template-columns:repeat(auto-fill,30%);grid-gap:20px 0}}.work h2{font-size:29px;text-transform:uppercase}.work h2,.work h3{text-align:center;padding:0 15px}.work h3{font-size:25px;font-weight:400;margin-bottom:0}.work hr{background-color:red}.work p{line-height:25px;max-width:800px;margin:24px auto;padding:0 15px}.work_designer{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.work_designer_items{-ms-flex:1 1 0px;flex:1 1 0}@media (max-width:576px){.work_designer_items{-ms-flex:none;flex:none;width:100%}}.work_designer_items_inner{position:relative}.work_designer_items_inner img{width:100%;height:auto;display:block}.work_designer_items_inner_overlay{position:absolute;top:0;left:0;opacity:0;transition:all .5s ease;text-align:center;background:linear-gradient(180deg,#f38181,#fce38a);width:100%;height:100%;display:grid;-ms-flex-line-pack:center;align-content:center;-ms-flex-pack:center;justify-content:center}.work_designer_items_inner_overlay img{margin:0 auto;width:30px}.work_designer_items_inner_overlay h2{font-size:14px;font-weight:400;color:#fff;margin-bottom:5px}.work_designer_items_inner_overlay p{color:#fff;margin:0;font-style:italic}@media (max-width:1023.98px){.work_designer_items_inner_overlay{display:none}}.work_designer_items_inner:hover .work_designer_items_inner_overlay{opacity:.9}.clients{margin:0 auto;padding:70px 0;background:url(../img/home/clients-back.jpg) no-repeat;max-width:1920px;background-size:100% 100%}@media screen and (max-width:767.98px){.clients{background-size:cover}}.clients .container>h2{font-size:29px;text-transform:uppercase;text-align:center}.clients .container>h3{font-size:25px;font-weight:400;margin-bottom:0;text-align:center}.clients .container>hr{background-color:red}.clients_say{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(1,230px);grid-gap:15px;margin-top:70px;color:#fff}@media screen and (max-width:767.98px){.clients_say{grid-template-columns:repeat(auto-fill,100%);grid-template-rows:auto;-ms-flex-pack:center;justify-content:center}}.clients_say_item{display:grid;grid-template-columns:140px 1fr}.clients_say_item_image img{border-radius:50%}.clients_say_item_title h2{font-size:14px;text-transform:uppercase;padding:0;margin:0 0 5px}.clients_say_item_title h3{padding-bottom:16px;font-size:16px;margin:0;font-weight:400}.clients_say_item_title hr{background:red;margin:0}.blog{padding:70px 0}.blog .container>h2{font-size:29px;text-transform:uppercase;text-align:center}.blog .container>h3{font-size:25px;font-weight:400;margin-bottom:0;text-align:center}.blog .container>hr{background-color:red}.blog_stories{display:grid;grid-template-columns:repeat(auto-fill,32%);-ms-flex-pack:justify;justify-content:space-between;grid-gap:15px;padding-top:50px}@media screen and (max-width:575.98px){.blog_stories{grid-template-columns:repeat(auto-fill,100%);-ms-flex-pack:center;justify-content:center}}@media screen and (min-width:576px) and (max-width:991.98px){.blog_stories{grid-template-columns:repeat(auto-fill,47%)}}.blog_stories_item{position:relative}.blog_stories_item a{text-decoration:none;font-size:21px;font-weight:800;line-height:1.4;margin:18px 0;display:block;color:#000}.blog_stories_item>img{width:100%;height:240px;-o-object-fit:cover;object-fit:cover}.blog_stories_item>p{border-bottom:2px solid #ccc;padding-bottom:15px}.blog_stories_item_date{width:60px;height:75px;background-color:#95e1d3;display:grid;-ms-flex-line-pack:center;align-content:center;-ms-flex-pack:center;justify-content:center;position:absolute;left:-15px;top:35%}.blog_stories_item_date h3{margin:0;font-size:23px;font-weight:800}.blog_stories_item_date p{margin:0;font-size:15px;font-style:italic}.blog_stories_item_icon,.blog_stories_item_icon_item{display:-ms-flexbox;display:flex}.blog_stories_item_icon_item{-ms-flex-align:center;align-items:center}.blog_stories_item_icon_item img{margin-right:5px}.blog_stories_item_icon_item span{margin-right:20px}.map{max-width:1920px;margin:0 auto;background:url(../img/home/map-back.jpg) no-repeat;background-size:cover;display:grid;grid-template-rows:200px;text-align:center}.map a{text-decoration:none;display:block;height:120px;position:relative;top:calc(50% - 60px)}.map a img{width:30px;height:36px}.map a h2{color:red;font-size:23px;text-transform:uppercase}.map a hr{background:red}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
